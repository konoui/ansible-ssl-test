---
# tasks file for ansible
## Step 0 Common pacakges
- name: install openssl and python
  package:
    name: openssl, python
    state: latest

- name: ensure pip
  shell: which pip
  # ignore an error for next block
  register: result
  failed_when: result.rc < 0

- block:
  - name: download get-pip.py
    get_url:
      dest: ~/get-pip.py
      url: https://bootstrap.pypa.io/get-pip.py
  - name: install pip
    shell: python ~/get-pip.py
  when: result.rc > 0

- name: install pyOpenSSL
  pip:
    name: pyOpenSSL
    state: present


## Step 1 Create CA
- name: create ca private key
  openssl_privatekey:
    path: "{{ abs_ca_key }}"
    state: present
  tags: CreateCA

- name: create csr
  openssl_csr:
    commonName: "{{ ca_common_name }}"
    countryName: "{{ ca_country_name }}"
    emailAddress: "{{ ca_email }}"
    localityName: "{{ ca_locality_name }}"
    organizationName: "{{ ca_organization_name }}"
    organizationalUnitName: "{{ ca_organization_unit_name }}"
    privatekey_path: "{{ abs_ca_key }}"
    stateOrProvinceName: "{{ ca_state_or_province_name }}"
    path: "{{ abs_ca_cert_csr }}"
    state: present
  tags: CreateCA


- name: create self signed certificate
  openssl_certificate:
    csr_path: "{{ abs_ca_cert_csr }}"
    privatekey_path: "{{ abs_ca_key }}"
    provider: selfsigned
    valid_in: 315360000
    path: "{{ abs_ca_cert_pem }}"
    state: present
  tags: CreateCA

- name: convert CA certificate to DER
  shell: "openssl x509 -inform PEM -outform DER -in {{ abs_ca_cert_pem }} -out {{ abs_ca_cert_der }}"
  args:
    creates: "{{ abs_ca_cert_der }}"
  tags: CreateCA

- name: create index file
  file:
    path: "{{ ca_dir }}/index.txt"
    state: touch
  tags: CreateCA

- name: create serial file
  shell: "echo '01' > {{ ca_dir }}/serial"
  args:
    creates: "{{ ca_dir }}/serial"
  tags: CreateCA

- name: download CA certificate
  fetch:
    src: "{{ abs_ca_cert_der }}"
    dest: "{{ local_store_dir }}/{{ ca_cert_der }}"
    fail_on_missing: yes
    flat: yes
  tags: CreateCA


# Step 2 Generate csrs for server or client
- name: ensure store fir exist
  file:
    mode: 0664
    path: "{{ remote_store_dir }}"
    state: directory

- name: create private key
  openssl_privatekey:
    path: "{{ remote_store_dir }}/{{ inventory_hostname }}_key.pem"
    state: present

- name: create csr
  openssl_csr:
    commonName: "{{ common_name }}"
    countryName: "{{ country_name }}"
    emailAddress: "{{ email }}"
    localityName: "{{ locality_name }}"
    organizationName: "{{ organization_name }}"
    organizationalUnitName: "{{ organization_unit_name }}"
    stateOrProvinceName: "{{ state_or_province_name }}"
    privatekey_path: "{{ remote_store_dir }}/{{ inventory_hostname }}_key.pem"
    path: "{{ remote_store_dir }}/{{ inventory_hostname }}.csr"
    state: present

# TEST
- name: download csrs
  fetch:
    src: "{{ remote_store_dir }}/{{ inventory_hostname }}.csr"
    dest: "{{ local_store_dir }}/{{ inventory_hostname }}.csr"
    fail_on_missing: yes
    flat: yes

- name: download private keys
  fetch:
    src: "{{ remote_store_dir }}/{{ inventory_hostname }}_key.pem"
    dest: "{{ local_store_dir }}/{{ inventory_hostname }}_key.pem"
    fail_on_missing: yes
    flat: yes


## Step 3 Sign csrs by ca private key
- name: create csr store
  file:
    mode: 0664
    path: "{{ ca_csr_store_dir }}"
    state: directory
  tags: SignCertificateByCaKey

# TEST
- name: copy local csrs to remote ca
  copy:
    src: "{{ local_store_dir }}/{{ inventory_hostname }}.csr"
    dest: "{{ ca_csr_store_dir }}/{{ inventory_hostname }}.csr"
    force: yes
  tags: SignCertificateByCaKey
- name: create certificates signed by ca
  openssl_certificate:
    csr_path: "{{ ca_csr_store_dir }}/{{ inventory_hostname }}.csr"
    privatekey_path: "{{ abs_ca_key }}"
    provider: selfsigned
    valid_in: 315360000
    path: "{{ ca_csr_store_dir }}/{{ inventory_hostname }}.cert.pem"
    state: present
  tags: SignCertificateByCaKey

# - name: create certificates signed by ca
#   openssl_certificate:
#     csr_path: "{{ remote_store_dir }}/{{ inventory_hostname }}.csr"
#     privatekey_path: "{{ abs_ca_key }}"
#     provider: selfsigned
#     valid_in: 315360000
#     path: "{{ ca_csr_store_dir }}/{{ inventory_hostname }}.cert.pem"
#     state: present
#   tags: SignCertificateByCaKey

- name: download certificates to local
  fetch:
    src: "{{ ca_csr_store_dir }}/{{ inventory_hostname }}.cert.pem"
    dest: "{{ local_store_dir }}/{{ inventory_hostname }}.cert.pem"
    fail_on_missing: yes
    flat: yes
  tags: SignCertificateByCaKey