---
# tasks file for ansible
- name: install openssl
  package:
    name: openssl, python
    state: latest

- name: install pip
  shell: which pip
  failed_when: result.rc < 0
  register: result

- block:
  - name: download get-pip.py
    get_url:
      dest: ~/get-pip.py
      url: https://bootstrap.pypa.io/get-pip.py
  - name: install pip
    shell: python ~/get-pip.py
  when: result.rc == 1

- name: install pyOpenSSL
  pip:
    name: pyOpenSSL
    state: present

# TODO change cakey, casert, ca_cert.der to valiable
- name: create ca private key
  openssl_privatekey:
    path: "{{ ca_dir }}/{{ private_dir }}/{{ ca_key }}"
    state: present

- name: create csr
  openssl_csr:
    commonName: "{{ ca_common_name }}"
    countryName: "{{ ca_country_name }}"
    emailAddress: "{{ ca_email }}"
    localityName: "{{ ca_locality_name }}"
    organizationName: "{{ ca_organization_name }}"
    organizationalUnitName: "{{ ca_organization_unit_name }}"
    privatekey_path: "{{ ca_dir }}/{{ private_dir }}/{{ ca_key }}"
    stateOrProvinceName: "{{ ca_state_or_province_name }}"
    path: "{{ ca_dir }}/{{ ca_cert_csr }}"
    state: present


- name: create self signed certificate
  openssl_certificate:
    csr_path: "{{ ca_dir }}/{{ ca_cert_csr }}"
    privatekey_path: "{{ ca_dir }}/{{ private_dir }}/{{ ca_key }}"
    provider: selfsigned
    valid_in: 315360000
    path: "{{ ca_dir }}/{{ ca_cert_pem }}"
    state: present

- name: convert CA certificate to DER
  shell: "openssl x509 -inform PEM -outform DER -in {{ ca_dir }}/{{ ca_cert_pem }} -out {{ ca_dir }}/{{ ca_cert_der }}"
  args:
    creates: "{{ ca_dir }}/{{ ca_cert_der }}"

- name: create index file
  file:
    path: "{{ ca_dir }}/index.txt"
    state: touch

- name: create serial file
  shell: "echo '01' > {{ ca_dir }}/serial"
  args:
    creates: "{{ ca_dir }}/serial"

- name: download CA certificate
  fetch:
    src: "{{ ca_dir }}/{{ ca_cert_der }}"
    dest: "{{ local_download_dir }}/{{ ca_cert_der }}"
    fail_on_missing: yes
    flat: yes
